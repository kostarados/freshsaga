{"version":3,"sources":["logo.png","components/Stopwatch/dpad.png","components/Navigation/navigation.js","components/Stopwatch/stopwatch.js","ProgressCard.js","SampleDataProgressbar.js","ProgressBarList.js","SearchBox.js","AddNewProject.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navigation","react_default","a","createElement","className","Link","to","formattedSeconds","sec","Math","floor","slice","Stopwatch","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","secondsElapsed","laps","lastClearedIncrementer","goal","incrementer","_this2","setInterval","setState","clearInterval","concat","map","lap","i","key","src","dpad","alt","width","height","stopwatch_Button","onClick","handleStartClick","bind","handleStopClick","handleLapClick","handleResetClick","React","Component","Button","assign","type","ProgressCard","progress","handleIncrement","handleDecrement","assertThisInitialized","console","log","role","aria-label","name","value","max","confirmIncrement","SampleDataProgressbar","id","userid","icon","ProgressBarList","bar","src_ProgressCard","SearchBox","_ref","searchfield","searchChange","placeholder","onChange","AddNewProject","onProjectInputChange","onProjectInputLengthChange","onProjectSubmit","size","App","onSearchChange","event","target","projectInput","count","filteredList","filter","toLowerCase","includes","logo","Switch","Route","path","component","render","src_AddNewProject","src_SearchBox","src_ProgressBarList","Navigation_navigation","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d9aea012.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5fc8ad50.png\";","module.exports = __webpack_public_path__ + \"static/media/dpad.33234864.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport './navigation.css';\r\n\r\n\r\nconst Navigation = () => {\r\n\treturn (\r\n\t\t<div className='henk'>\r\n\t\t\t<ul className='navbar'>\r\n\t\t\t\t<li className='navbaritem'><Link className=\"navbaractive\" to=\"/\">Progress</Link></li>\r\n\t\t\t\t<li className='navbaritem'><Link to=\"/flow\">Daily Flow</Link></li>\r\n\t\t\t\t<li className='navbaritem'><Link to=\"/tasks\">Tasks</Link></li>\r\n\t\t\t\t<li className='navbaritem'><Link to=\"/gameboy\">Game Boy</Link></li>\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './stopwatch.css';\r\nimport dpad from './dpad.png';\r\n\r\n\r\nconst formattedSeconds = (sec) =>\r\n  Math.floor(sec / 60) +\r\n    ':' +\r\n  ('0' + sec % 60).slice(-2)\r\n  \r\n\r\nclass Stopwatch extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      secondsElapsed: 0, \r\n      laps: [],\r\n      lastClearedIncrementer: null,\r\n      goal: [],\r\n    };\r\n    this.incrementer = null;\r\n  }  \r\n    \r\n  handleStartClick() {\r\n    this.incrementer = setInterval( () =>\r\n      this.setState({\r\n        secondsElapsed: this.state.secondsElapsed + 1\r\n      })\r\n    , 1000);\r\n  }\r\n  \r\n  handleStopClick() {\r\n    clearInterval(this.incrementer);\r\n    this.setState({\r\n      lastClearedIncrementer: this.incrementer\r\n    });\r\n  }\r\n  \r\n  handleResetClick() {\r\n    clearInterval(this.incrementer);\r\n    this.setState({\r\n      secondsElapsed: 0,\r\n      laps: []\r\n    });\r\n  }\r\n  \r\n  handleLapClick() {\r\n    this.setState({\r\n      laps: this.state.laps.concat([this.state.secondsElapsed])\r\n    })\r\n  }\r\n\r\n  handleSetGoal() {\r\n    /*Voeg hier SetGoal functionaliteit toe*/\r\n  }\r\n\r\n  \r\n  render() {\r\n    return (\r\n        <div className=\"stopwatch\">\r\n          <div className=\"stopwatch-bg\">\r\n            <h2 className=\"stopwatch-title\">[NAME]</h2>\r\n            <div  className=\"stopwatch-screen\">\r\n              <h1  className=\"stopwatch-timer\">{formattedSeconds(this.state.secondsElapsed)}</h1>\r\n              <ul className=\"stopwatch-laps\">\r\n              { this.state.laps.map((lap, i) =>\r\n                  <li key={i} className=\"stopwatch-lap\"><strong>{formattedSeconds(lap)} added to your progress {i + 1}</strong></li>)\r\n              }\r\n              </ul>\r\n            </div>\r\n           </div>\r\n           <div className=\"controller\"><img className=\"dpad\" src={dpad} alt=\"dpad\" width=\"150px\" height=\"150px\"></img>\r\n            {(this.state.secondsElapsed === 0 ||\r\n              this.incrementer === this.state.lastClearedIncrementer\r\n              ? <Button className=\"start-btn\" onClick={this.handleStartClick.bind(this)}>start</Button>\r\n              : <Button className=\"stop-btn\" onClick={this.handleStopClick.bind(this)}>pause</Button>\r\n            )}\r\n            {(this.state.secondsElapsed !== 0 &&\r\n              this.incrementer !== this.state.lastClearedIncrementer\r\n              ? <Button className=\"lap-btn\" onClick={this.handleLapClick.bind(this)}>lap</Button>\r\n              : <Button className=\"lap-btn\">set goal</Button>\r\n            )}\r\n            {(this.state.secondsElapsed !== 0 &&\r\n              this.incrementer === this.state.lastClearedIncrementer\r\n              ? <Button className=\"reset-btn\" onClick={this.handleResetClick.bind(this)}>reset</Button>\r\n              : null\r\n            )}</div>\r\n            {/*<ul className=\"stopwatch-laps\">\r\n              { this.state.laps.map((lap, i) =>\r\n                  <li className=\"stopwatch-lap\"><strong>Added to your progress {i + 1}</strong>/ {formattedSeconds(lap)}</li>)\r\n              }\r\n            </ul>*/}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n/** verbose component before 0.14\r\nclass Button extends React.Component {\r\n  render() {\r\n    return <button type=\"button\" {...this.props}\r\n                   className={\"btn \" + this.props.className } />;\r\n  }\r\n}\r\n*/\r\n\r\nconst Button = (props) =>\r\n  <button type=\"button\" {...props} className={\"btn \" + props.className } />;\r\n\r\nexport default Stopwatch;","import React, { Component } from 'react';\r\n\r\nclass ProgressCard extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.handleIncrement.bind(this);\r\n\t}\r\n\tstate = {\r\n\t\tprogress: this.props.progress,\r\n\t\tgoal: this.props.goal,\r\n\t};\r\n\r\nhandleIncrement = () => {\r\n\tthis.setState({progress: this.state.progress + 1});\r\n}\r\nhandleDecrement = () => {\r\n\tthis.setState({progress: this.state.progress - 1});\r\n}\r\n//ProgressCard = (props) => {1}\r\nconfirmIncrement() {\r\n\tconsole.log('Your progress is added!')\r\n} \r\n\r\n\r\nrender(){\r\n\treturn (\r\n\t\t<div className='card'>\r\n\t\t\t<h2><span role='img' aria-label='Shinto'>⛩️</span></h2>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{this.props.name}</h2>\r\n\t\t\t\t<p><progress value={this.state.progress} max={this.props.goal}></progress> {this.state.progress}/{this.props.goal}</p>\r\n\t\t\t\t<div><button onClick={() => this.handleDecrement()}>-1</button><button onClick={() => this.handleIncrement()}>+1</button></div>\r\n\t\t\t\t<div><button onClick={() => this.confirmIncrement()}>Submit</button></div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\r\n\r\n}\r\n/*formatCount() {\r\n\t\tconst {progress} = this.state;\r\n\t\treturn progress === 0 ? \"Zero\" : progress;\r\n\t}*/\t\r\n}\r\nexport default ProgressCard;","export let SampleDataProgressbar = [\r\n  {\r\n    id: 1,\r\n    name: 'Guitar',\r\n    userid: 1,\r\n    icon: 'ICON',\r\n\t  progress: 10,\r\n    goal: 50,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'Painting',\r\n    userid: 1,\r\n    icon: 'ICON',\r\n\t  progress: 20,\r\n    goal: 60,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'Baking',\r\n    userid: 1,\r\n    icon: 'ICON',\r\n\t  progress: 30,\r\n    goal: 70,\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'Reading',\r\n    userid: 1,\r\n    icon: 'ICON',\r\n\t  progress: 40,\r\n    goal: 50,\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'Sports',\r\n    userid: 1,\r\n    icon: 'ICON',\r\n\t  progress: 50,\r\n    goal: 50,\r\n  },\r\n];\r\n","import React, { Component } from 'react';\r\nimport ProgressCard from './ProgressCard';\r\nimport { SampleDataProgressbar } from './SampleDataProgressbar';\r\n\r\nclass ProgressBarList extends Component {\r\n\tstate = {\r\n\t\t/*counters: [\r\n\t\t\t{ id: 1, value: 0 },\r\n\t\t\t{ id: 2, value: 0 },\r\n\t\t\t{ id: 3, value: 0 },\r\n\t\t\t{ id: 4, value: 0 },\r\n\t\t],\r\n\t\tprogress: this.props.progress,*/\r\n\t};\r\n\t\t\t\r\nrender() {\r\n\treturn(\r\n\t\t<div>\r\n\t\t{ \r\n\t\t\tSampleDataProgressbar.map((bar, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ProgressCard\r\n\t\t\t\tkey={i}\r\n\t\t\t\tid={SampleDataProgressbar[i].id} \r\n\t\t\t\tname={SampleDataProgressbar[i].name} \r\n\t\t\t\tprogress={SampleDataProgressbar[i].progress}\r\n\t\t\t\tgoal={SampleDataProgressbar[i].goal}\r\n\t\t\t\t/>\r\n\t\t\t);}\r\n\t\t)}\r\n\t\t{/*{\r\n\t\t\tthis.state.counters.map(\r\n\t\t\t\tcounter => <ProgressCard \r\n\t\t\t\t\tkey={counter.id}\r\n\t\t\t\t\tvalue={counter.value}\r\n\t\t\t\t\tprogress={counter.value} \r\n\t\t\t\t\t/>)}\r\n\t\t\t*/}\r\n\t\t</div>)}\r\n}\r\n\r\n\r\nexport default ProgressBarList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n\treturn (\r\n\t<div>\r\n\t\t<input \r\n\t\t\ttype='search'\r\n\t\t\tplaceholder='filter projects...'\r\n\t\t\tonChange={searchChange}\r\n\t\t/>\r\n\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst AddNewProject = ({ onProjectInputChange, onProjectInputLengthChange, onProjectSubmit }) => {\r\n\treturn (\r\n\t\t<div className='card-alt'>\r\n\t\t\t<p>{'Add a new project:'}</p>\r\n\t\t\t<input type='text' onChange={ onProjectInputChange } placeholder='What is your task?'></input>\r\n\t\t\t<input type='number' onChange={ onProjectInputLengthChange } placeholder='How many hours?' max='200' size='4'></input>\r\n\t\t\t<button onClick={ onProjectSubmit }>Add</button>\r\n\t\t</div>\r\n\t\t)\r\n}\r\n\r\nexport default AddNewProject","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport logo from './logo.png';\r\nimport Navigation from './components/Navigation/navigation';\r\nimport Stopwatch from './components/Stopwatch/stopwatch';\r\nimport ProgressBarList from './ProgressBarList';\r\nimport SearchBox from './SearchBox';\r\nimport './App.css';\r\nimport { SampleDataProgressbar } from './SampleDataProgressbar';\r\nimport AddNewProject from './AddNewProject';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tSampleDataProgressbar: SampleDataProgressbar,\r\n\t\t\tsearchfield: '',\r\n\t\t\tcount: 0,\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\t}\r\n\r\n\tonProjectSubmit = (projectInput) => {\r\n\t\tthis.setState({projectInput: this.state.projectInput + 20})\r\n\t\t//this.setState({ projectInput: this.state.progress = 5});\r\n\t\tconsole.log('click', this.projectInput)\r\n\t}\r\n\r\n/*handleIncrement = () => {\r\n\tthis.setState({count: this.state.count + 1});*/\r\n\r\n\r\n\trender() {\r\n\t\t//filtervakje\r\n\t\tconst filteredList = this.state.SampleDataProgressbar.filter(SampleDataProgressbar => {\r\n\t\t\treturn SampleDataProgressbar.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n\t\t})\r\n\t\treturn(\r\n\t\t\t<div className='app'>\r\n\t\t\t\t<img src={logo} alt='Logo FreshSaga' width='25%'></img>\r\n\t\t\t\t<div className=\"content\">\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/gameboy\" component={Stopwatch} />\r\n\t\t\t\t\t<Route path=\"/tasks\" render={() =>\r\n\t\t\t\t\t\t<AddNewProject \r\n\t\t\t\t\t\t\tonProjectInputChange={this.onProjectInputChange}\r\n\t\t\t\t\t\t\tonProjectInputLengthChange={this.onProjectInputLengthChange}\r\n\t\t\t\t\t\t\tonProjectSubmit={this.onProjectSubmit}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}/>\r\n\t\t\t\t\t<Route path=\"/\" render={() => \r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<div>{this.state.projectInput}</div>\r\n\t\t\t\t\t\t\t<h1>Your Progress</h1>\r\n\t\t\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t\t\t<ProgressBarList SampleDataProgressbar={filteredList} /></div>\r\n\t\t\t\t\t}/>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Navigation />\r\n\r\n\t\t\t</div>\r\n\t\t\t);\t\r\n\t}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n\t<BrowserRouter>\n\t<App />\n\t</BrowserRouter>,\n\tdocument.getElementById('root')\n\t);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}